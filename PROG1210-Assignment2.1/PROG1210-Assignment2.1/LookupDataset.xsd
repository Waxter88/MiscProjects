<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="LookupDataset" targetNamespace="http://tempuri.org/LookupDataset.xsd" xmlns:mstns="http://tempuri.org/LookupDataset.xsd" xmlns="http://tempuri.org/LookupDataset.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="SportMotors_12ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="SportMotors_12ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.PROG1210_Assignment2._1.Properties.Settings.GlobalReference.Default.SportMotors_12ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SportColorTableAdapter" GeneratorDataComponentClassName="SportColorTableAdapter" Name="SportColor" UserDataComponentName="SportColorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SportMotors_12ConnectionString (Settings)" DbObjectName="dbo.SportColor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SportColor] WHERE (([ColorDescription] = @Original_ColorDescription))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ColorDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ColorDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SportColor] ([ColorDescription]) VALUES (@ColorDescription);
SELECT ColorDescription FROM SportColor WHERE (ColorDescription = @ColorDescription)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ColorDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ColorDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ColorDescription FROM dbo.SportColor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SportColor] SET [ColorDescription] = @ColorDescription WHERE (([ColorDescription] = @Original_ColorDescription));
SELECT ColorDescription FROM SportColor WHERE (ColorDescription = @ColorDescription)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ColorDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ColorDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ColorDescription" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ColorDescription" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ColorDescription" DataSetColumn="ColorDescription" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SportStateTableAdapter" GeneratorDataComponentClassName="SportStateTableAdapter" Name="SportState" UserDataComponentName="SportStateTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SportMotors_12ConnectionString (Settings)" DbObjectName="dbo.SportState" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SportState] WHERE (([StateAbbreviation] = @Original_StateAbbreviation) AND ([StateName] = @Original_StateName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StateAbbreviation" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StateAbbreviation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StateName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StateName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SportState] ([StateAbbreviation], [StateName]) VALUES (@StateAbbreviation, @StateName);
SELECT StateAbbreviation, StateName FROM SportState WHERE (StateAbbreviation = @StateAbbreviation)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StateAbbreviation" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StateAbbreviation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StateName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StateName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StateAbbreviation, StateName FROM dbo.SportState</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SportState] SET [StateAbbreviation] = @StateAbbreviation, [StateName] = @StateName WHERE (([StateAbbreviation] = @Original_StateAbbreviation) AND ([StateName] = @Original_StateName));
SELECT StateAbbreviation, StateName FROM SportState WHERE (StateAbbreviation = @StateAbbreviation)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StateAbbreviation" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StateAbbreviation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StateName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StateName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StateAbbreviation" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StateAbbreviation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StateName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StateName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StateAbbreviation" DataSetColumn="StateAbbreviation" />
              <Mapping SourceColumn="StateName" DataSetColumn="StateName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SportPaymentTypeTableAdapter" GeneratorDataComponentClassName="SportPaymentTypeTableAdapter" Name="SportPaymentType" UserDataComponentName="SportPaymentTypeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SportMotors_12ConnectionString (Settings)" DbObjectName="dbo.SportPaymentType" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SportPaymentType] WHERE (([PaymentType] = @Original_PaymentType))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PaymentType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PaymentType" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SportPaymentType] ([PaymentType]) VALUES (@PaymentType);
SELECT PaymentType FROM SportPaymentType WHERE (PaymentType = @PaymentType)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PaymentType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PaymentType" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PaymentType FROM dbo.SportPaymentType</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SportPaymentType] SET [PaymentType] = @PaymentType WHERE (([PaymentType] = @Original_PaymentType));
SELECT PaymentType FROM SportPaymentType WHERE (PaymentType = @PaymentType)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PaymentType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PaymentType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PaymentType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PaymentType" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PaymentType" DataSetColumn="PaymentType" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="LookupDataset" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_UserDSName="LookupDataset" msprop:Generator_DataSetName="LookupDataset">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="SportColor" msprop:Generator_RowEvHandlerName="SportColorRowChangeEventHandler" msprop:Generator_RowDeletedName="SportColorRowDeleted" msprop:Generator_RowDeletingName="SportColorRowDeleting" msprop:Generator_RowEvArgName="SportColorRowChangeEvent" msprop:Generator_TablePropName="SportColor" msprop:Generator_RowChangedName="SportColorRowChanged" msprop:Generator_RowChangingName="SportColorRowChanging" msprop:Generator_TableClassName="SportColorDataTable" msprop:Generator_RowClassName="SportColorRow" msprop:Generator_TableVarName="tableSportColor" msprop:Generator_UserTableName="SportColor">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ColorDescription" msprop:Generator_ColumnPropNameInRow="ColorDescription" msprop:Generator_ColumnPropNameInTable="ColorDescriptionColumn" msprop:Generator_ColumnVarNameInTable="columnColorDescription" msprop:Generator_UserColumnName="ColorDescription">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SportState" msprop:Generator_RowEvHandlerName="SportStateRowChangeEventHandler" msprop:Generator_RowDeletedName="SportStateRowDeleted" msprop:Generator_RowDeletingName="SportStateRowDeleting" msprop:Generator_RowEvArgName="SportStateRowChangeEvent" msprop:Generator_TablePropName="SportState" msprop:Generator_RowChangedName="SportStateRowChanged" msprop:Generator_RowChangingName="SportStateRowChanging" msprop:Generator_TableClassName="SportStateDataTable" msprop:Generator_RowClassName="SportStateRow" msprop:Generator_TableVarName="tableSportState" msprop:Generator_UserTableName="SportState">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StateAbbreviation" msprop:Generator_ColumnPropNameInRow="StateAbbreviation" msprop:Generator_ColumnPropNameInTable="StateAbbreviationColumn" msprop:Generator_ColumnVarNameInTable="columnStateAbbreviation" msprop:Generator_UserColumnName="StateAbbreviation">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="StateName" msprop:Generator_ColumnPropNameInRow="StateName" msprop:Generator_ColumnPropNameInTable="StateNameColumn" msprop:Generator_ColumnVarNameInTable="columnStateName" msprop:Generator_UserColumnName="StateName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SportPaymentType" msprop:Generator_RowEvHandlerName="SportPaymentTypeRowChangeEventHandler" msprop:Generator_RowDeletedName="SportPaymentTypeRowDeleted" msprop:Generator_RowDeletingName="SportPaymentTypeRowDeleting" msprop:Generator_RowEvArgName="SportPaymentTypeRowChangeEvent" msprop:Generator_TablePropName="SportPaymentType" msprop:Generator_RowChangedName="SportPaymentTypeRowChanged" msprop:Generator_RowChangingName="SportPaymentTypeRowChanging" msprop:Generator_TableClassName="SportPaymentTypeDataTable" msprop:Generator_RowClassName="SportPaymentTypeRow" msprop:Generator_TableVarName="tableSportPaymentType" msprop:Generator_UserTableName="SportPaymentType">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PaymentType" msprop:Generator_ColumnPropNameInRow="PaymentType" msprop:Generator_ColumnPropNameInTable="PaymentTypeColumn" msprop:Generator_ColumnVarNameInTable="columnPaymentType" msprop:Generator_UserColumnName="PaymentType">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="11" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SportColor" />
      <xs:field xpath="mstns:ColorDescription" />
    </xs:unique>
    <xs:unique name="SportState_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SportState" />
      <xs:field xpath="mstns:StateAbbreviation" />
    </xs:unique>
    <xs:unique name="SportPaymentType_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SportPaymentType" />
      <xs:field xpath="mstns:PaymentType" />
    </xs:unique>
  </xs:element>
</xs:schema>